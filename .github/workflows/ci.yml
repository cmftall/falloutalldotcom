name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: website/package-lock.json
        
    - name: Install dependencies
      working-directory: ./website
      run: npm ci
      
    - name: Run type checking
      working-directory: ./website
      run: npm run type-check
      
    - name: Run linting
      working-directory: ./website
      run: npm run lint
      
    - name: Run tests
      working-directory: ./website
      run: npm test -- --coverage --watchAll=false
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./website/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  build:
    name: Build & Export
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: website/package-lock.json
        
    - name: Install dependencies
      working-directory: ./website
      run: npm ci
      
    - name: Build application
      working-directory: ./website
      run: npm run build
      
    - name: Export static site
      working-directory: ./website
      run: npm run export
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: static-site
        path: website/out/
        retention-days: 7

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: website/package-lock.json
        
    - name: Install dependencies
      working-directory: ./website
      run: npm ci
      
    - name: Run security audit
      working-directory: ./website
      run: npm audit --audit-level=moderate
      
    - name: Check for known vulnerabilities
      working-directory: ./website
      run: npx audit-ci --config audit-ci.json

  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: static-site
        path: website/out/
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x
      
    - name: Run Lighthouse CI
      run: lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: static-site
        path: website/out/
        
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./website/out
        vercel-args: '--prod'
